import numpy as np

def py_encode_1(compressed: bool, arr: np.ndarray) -> str: ...
def py_encode_2(compressed: bool, arr: np.ndarray) -> str: ...
def py_encode_3(compressed: bool, arr: np.ndarray) -> str: ...
def py_encode_4(compressed: bool, arr: np.ndarray) -> str: ...
def py_encode_dyn(compressed: bool, arr: np.ndarray) -> str: ...
def py_decode_1_bool(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_1_f32(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_1_f64(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_1_i8(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_1_i16(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_1_i32(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_1_i64(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_1_u8(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_1_u16(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_1_u32(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_1_u64(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_2_bool(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_2_f32(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_2_f64(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_2_i8(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_2_i16(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_2_i32(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_2_i64(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_2_u8(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_2_u16(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_2_u32(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_2_u64(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_3_bool(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_3_f32(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_3_f64(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_3_i8(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_3_i16(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_3_i32(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_3_i64(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_3_u8(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_3_u16(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_3_u32(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_3_u64(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_4_bool(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_4_f32(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_4_f64(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_4_i8(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_4_i16(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_4_i32(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_4_i64(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_4_u8(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_4_u16(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_4_u32(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_4_u64(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_dyn_bool(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_dyn_f32(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_dyn_f64(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_dyn_i8(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_dyn_i16(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_dyn_i32(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_dyn_i64(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_dyn_u8(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_dyn_u16(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_dyn_u32(compressed: bool, arr: str) -> np.ndarray: ...
def py_decode_dyn_u64(compressed: bool, arr: str) -> np.ndarray: ...
